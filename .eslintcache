[{"/home/mohit/reactjs/src/index.js":"1","/home/mohit/reactjs/src/reportWebVitals.js":"2","/home/mohit/reactjs/src/App.js":"3","/home/mohit/reactjs/src/components/Todo.js":"4","/home/mohit/reactjs/src/components/FilterButton.js":"5","/home/mohit/reactjs/src/components/Form.js":"6"},{"size":645,"mtime":1614855324954,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1611727045025,"results":"9","hashOfConfig":"8"},{"size":5906,"mtime":1614858674106,"results":"10","hashOfConfig":"8"},{"size":3403,"mtime":1614776235447,"results":"11","hashOfConfig":"8"},{"size":424,"mtime":1614854193791,"results":"12","hashOfConfig":"8"},{"size":843,"mtime":1614770572989,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1twmxih",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/mohit/reactjs/src/index.js",[],"/home/mohit/reactjs/src/reportWebVitals.js",[],["28","29"],"/home/mohit/reactjs/src/App.js",["30"],"/home/mohit/reactjs/src/components/Todo.js",["31"],"import React, { useEffect, useRef, useState } from \"react\";\n// import AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\n// import ThreeDRotation from '@material-ui/icons/ThreeDRotation';\nimport Grid from '@material-ui/core/Grid';\n\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nimport CreateIcon from '@material-ui/icons/Create';\nimport { Create } from \"@material-ui/icons\";\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n        {/* <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n        >\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n        <span class=\"material-icons\">&#xE87C;</span> */}\n        <Grid container className=\"MuiSvgIcon-root\">\n            <Grid item xs={8}>\n              <CreateIcon onClick={() => setEditing(true)}  ref={editButtonRef}/>\n            </Grid>  \n          </Grid>\n\n          <Grid container className=\"MuiSvgIcon-root\">\n            <Grid item xs={8}>\n              <DeleteForeverIcon onClick={() => props.deleteTask(props.id)}/>\n            </Grid>  \n          </Grid>\n        </div>\n    </div>\n  );\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n\n\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/home/mohit/reactjs/src/components/FilterButton.js",[],"/home/mohit/reactjs/src/components/Form.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":227,"column":7,"nodeType":"38","endLine":231,"endColumn":8},{"ruleId":"39","severity":1,"message":"40","line":9,"column":10,"nodeType":"41","messageId":"42","endLine":9,"endColumn":16},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","no-unused-vars","'Create' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]